andi r00,r00,h00
out r00
;call delay_2ms
call delay_0.5s
addi r00,r00,h38
call cmndwrt
;call delay_2ms
call delay_0.5s
andi r00,r00,h00
;addi r00,r00,h0e for cursor
addi r00,r00,h0c
call cmndwrt
andi r00,r00,h00
addi r00,r00,h01
call cmndwrt
;call delay_2ms
call delay_0.5s
andi r00,r00,h00
addi r00,r00,h06
call cmndwrt

andi r00,r00,h00
addi r00,r00,h81
call cmndwrt
call delay_0.5s
andi r00,r00,h00
addi r00,r00,h40
call cmndwrt
call delay_0.5s
andi r00,r00,h00
addi r00,r00,h0
call datawrt
andi r00,r00,h00
addi r00,r00,h4
call datawrt
andi r00,r00,h00
addi r00,r00,ha
call datawrt
andi r00,r00,h00
addi r00,r00,h11
call datawrt
andi r00,r00,h00
addi r00,r00,ha
call datawrt
andi r00,r00,h00
addi r00,r00,h4
call datawrt
andi r00,r00,h00
addi r00,r00,h4
call datawrt
andi r00,r00,h00
addi r00,r00,h4
call datawrt

halt

cmndwrt: out r00
ori r00,r00,h100
out r00
;call sdelay
call delay_0.5s
andi r00,r00,hff
out r00
;call delay_100us
call delay_0.5s
ret

datawrt:out r00
ori r00,r00,h500
out r00
;call sdelay
call delay_0.5s
andi r00,r00,heff
out r00
;call delay_100us
call delay_0.5s
ret

sdelay:push r00
push r01
andi r00,r00,h00
addi r00,r00,h19
andi r01,r01,h00
atef1:be r00,r01,atef2
subi r00,r00,h01
jump atef1
atef2:pop r01
pop r00
ret

delay_100us:push r00
push r01
andi r00,r00,h00
addi r00,r00,h64
andi r01,r01,h00
atef3:be r00,r01,atef4
call sdelay
subi r00,r00,h01
jump atef3
atef4:pop r01
pop r00
ret

delay_2ms: push r00
push r01
andi r00,r00,h00
addi r00,r00,h14
andi r01,r01,h00
h4: be r01,r00,h3
call delay_100us
subi r00,r00,h01
jump h4
h3:pop r01
pop r00
ret

delay_0.5s:push r00
push r01
andi r00,r00,h00
addi r00,r00,hfa
andi r01,r01,h00
h4: be r01,r00,h3
call delay_2ms
subi r00,r00,h01
jump h4
h3:pop r01
pop r00
ret